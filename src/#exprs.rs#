
#[derive(PartialEq, Debug, Clone)]
pub enum Type {
    Integer,
    Float,
    String,
    Char,
    Bool,
    Comp(String, Vec<Type>),
    Func(Vec<Type>),
}

#[derive(PartialEq, Debug, Clone)]
pub enum Expr {
    TopLevel(String, Box<Expr>),

    Bool(bool),
    Integer(i64),
    Float(f64),
    Char(char),
    String(String),
    Variable(String),
    BinOp(Box<Expr>, String, Box<Expr>),
    Func(Vec<(String, Type)>, Box<Expr>),
    Bind(String, Box<Expr>, Box<Expr>),
    Call(Box<Expr>, Vec<Expr>),
    If(Box<Expr>, Box<Expr>, Box<Expr>),
}
